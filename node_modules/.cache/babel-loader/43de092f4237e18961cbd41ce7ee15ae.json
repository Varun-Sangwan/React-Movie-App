{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/movie-app/src/SearchMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MovieCard from \"./MovieCard\";\nexport default function SearchMovies() {\n  _s();\n\n  //states- input query, movies\n  const [query, setQuery] = useState(\"\"); //create the state for movies, and update that state appropriate\n\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async e => {\n    e.preventDefault();\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovies(data.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: searchMovies,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"query\",\n        children: \"Movie Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"i.e. Jurassic Park\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: movies.filter(movie => movie.poster_path).map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchMovies, \"e7XxUt8GEeOkFVgRxnqk+d/VuNI=\");\n\n_c = SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/movie-app/src/SearchMovies.js"],"names":["React","useState","MovieCard","SearchMovies","query","setQuery","movies","setMovies","searchMovies","e","preventDefault","url","res","fetch","data","json","results","err","console","error","target","value","filter","movie","poster_path","map","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CAFqC,CAGrC;;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,GAAG,GAAI,2GAA0GP,KAAM,6BAA7H;;AAEA,QAAI;AACF,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,YAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAR,MAAAA,SAAS,CAACO,IAAI,CAACE,OAAN,CAAT;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,GAZD;;AAcA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAET,YAAjC;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,oBAJd;AAKE,QAAA,KAAK,EAAEJ,KALT;AAME,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV;AAN3B;AAAA;AAAA;AAAA;AAAA,cAJF,eAYE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGf,MAAM,CACJgB,MADF,CACUC,KAAD,IAAWA,KAAK,CAACC,WAD1B,EAEEC,GAFF,CAEOF,KAAD,iBACH,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB,SAA8BA,KAAK,CAACG,EAApC;AAAA;AAAA;AAAA;AAAA,cAHH;AADH;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA/CuBvB,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport MovieCard from \"./MovieCard\";\n\nexport default function SearchMovies() {\n  //states- input query, movies\n  const [query, setQuery] = useState(\"\");\n  //create the state for movies, and update that state appropriate\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async (e) => {\n    e.preventDefault();\n\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setMovies(data.results);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={searchMovies}>\n        <label className=\"label\" htmlFor=\"query\">\n          Movie Name\n        </label>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"i.e. Jurassic Park\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button className=\"button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"card-list\">\n        {movies\n          .filter((movie) => movie.poster_path)\n          .map((movie) => (\n            <MovieCard movie={movie} key={movie.id} />\n          ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}